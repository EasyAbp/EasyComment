@using EasyAbp.EasyComment.Comments.Dtos
@using EasyAbp.EasyComment.Localization
@using EasyAbp.EasyComment.Web.Pages.Shared.Components.CommentEditorWidget
@using EasyAbp.EasyComment.Web.Pages.Shared.Components.CommentViewerWidget
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Users
@model EasyAbp.EasyComment.Web.Pages.Shared.Components.CommentWidget.CommentWidgetViewModel
@inject IHtmlLocalizer<EasyCommentResource> L
@inject ICurrentUser CurrentUser

<abp-container class="ec-comments">
    <abp-input asp-for="ItemType"></abp-input>
    <abp-input asp-for="ItemKey"></abp-input>
    <abp-row>
        <i class="fa fa-comments"> @L["TotalComments", Model.Comments.TotalCount]</i>
    </abp-row>
    @{ int i = 1; }
    @foreach (CommentDto comment in Model.Comments.Items)
    {
        <abp-container class="ec-comment">
            <abp-row>
                <abp-column size="_6">
                    <abp-row>
                        <a class="ec-comment-link" href="#@comment.Id">#@(i++)</a>
                        <p class="ec-creator">@comment.CreatorName</p>
                        <time class="ec-comment-time" datetime="@comment.CreationTime">@comment.CreationTime</time>
                    </abp-row>
                </abp-column>
                <abp-column size="_6" class="text-right">
                    <abp-dropdown>
                        <abp-dropdown-button button-type="Light" text="..." size="Medium"/>
                        <abp-dropdown-menu>
                            @if (comment.CreatorId == CurrentUser.GetId())
                            {
                                <abp-dropdown-item class="ec-edit-comment" >@L["Edit"]</abp-dropdown-item>
                            }
                            <abp-dropdown-item class="ec-reply-comment">@L["Reply"]</abp-dropdown-item>
                            <abp-dropdown-item class="ec-reference-comment">@L["Reference"]</abp-dropdown-item>
                            @if (comment.CreatorId == CurrentUser.GetId())
                            {
                                <abp-dropdown-divider/>
                                <abp-dropdown-item class="ec-remove-comment">@L["Remove"]</abp-dropdown-item>
                            }
                        </abp-dropdown-menu>
                    </abp-dropdown>
                </abp-column>
            </abp-row>
            @await Component.InvokeAsync("CommentViewerWidget", new CommentViewerViewModel
            {
                Id = comment.Id,
                ItemType =  comment.ItemType,
                ItemKey = comment.ItemKey,
                Content = comment.Content,
            })
            <hr/>
        </abp-container>
    }
    @if (CurrentUser.IsAuthenticated)
    {
        <form method="post">
            @await Component.InvokeAsync("CommentEditorWidget", new CommentEditorViewModel
            {
                ShowLabel = true,
                Content = String.Empty,
            })
            <abp-button class="ec-button-new-comment" type="submit" button-type="Info" text="@L["PublishComment"].Value"/>
        </form>
    }
    else
    {
        // TODO
    }
</abp-container>