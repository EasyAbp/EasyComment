@using EasyAbp.EasyComment.Localization
@using EasyAbp.EasyComment.Permissions
@using EasyAbp.EasyComment.Web.Pages.Shared.Components.CommentViewerWidget
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Users
@model EasyAbp.EasyComment.Web.Pages.Shared.Components.CommentWidget.CommentWidgetViewModel
@inject ICurrentUser CurrentUser
@inject IAuthorizationService Authorization
@inject IHtmlLocalizer<EasyCommentResource> L

<abp-container class="ec-comment" data-comment-id="@Model.Comment.Id" data-creator-id="@Model.Comment.CreatorId">
    <img class="ec-user-avatar" src="@(Model.Comment.CreateUser.Avatar ?? "/images/default_avatar.png")"/>
    <div>
        <div class="ec-comment-info">
            <p class="ec-user-name">@Model.Comment.CreateUser.Name</p>
            @if (Model.Comment.ReplyTo.HasValue)
            {
                <span class="ec-reply-to">@L["ReplyTo"]</span>
                <p class="ec-user-name">@Model.Comment.ReplyToUser.Name</p>
            }
            <time class="ec-comment-time" datetime="@Model.Comment.CreationTime">@Model.Comment.CreationTime</time>
        </div>
        @await Component.InvokeAsync("CommentViewerWidget", new CommentViewerWidgetParameter {Id = Model.Comment.Id, Content = Model.Comment.Content,})
    </div>
    @if (CurrentUser.IsAuthenticated)
    {
        <abp-dropdown>
            <abp-dropdown-button button-type="Light" text="..." size="Medium"/>
            <abp-dropdown-menu>
                @if (Model.Comment.CreatorId == CurrentUser.GetId() ||
                     await Authorization.IsGrantedAsync(EasyCommentPermissions.Comment.Update))
                {
                    <abp-dropdown-item class="ec-action-edit">@L["Edit"]</abp-dropdown-item>
                }
                <abp-dropdown-item class="ec-action-reply">@L["Reply"]</abp-dropdown-item>
                <abp-dropdown-item class="ec-action-reference">@L["Reference"]</abp-dropdown-item>
                @if (Model.Comment.CreatorId == CurrentUser.GetId() ||
                     await Authorization.IsGrantedAsync(EasyCommentPermissions.Comment.Delete))
                {
                    <abp-dropdown-divider/>
                    <abp-dropdown-item class="ec-action-remove">@L["Remove"]</abp-dropdown-item>
                }
            </abp-dropdown-menu>
        </abp-dropdown>
    }
</abp-container>